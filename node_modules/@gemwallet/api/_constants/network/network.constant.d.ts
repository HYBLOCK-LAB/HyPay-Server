export declare enum Chain {
    XRPL = "XRPL",
    XAHAU = "XAHAU"
}
export declare enum XRPLNetwork {
    MAINNET = "Mainnet",
    TESTNET = "Testnet",
    DEVNET = "Devnet",
    CUSTOM = "Custom"
}
export declare enum XahauNetwork {
    XAHAU_MAINNET = "Mainnet",
    XAHAU_TESTNET = "Testnet",
    CUSTOM = "Custom"
}
export type Network = XRPLNetwork | XahauNetwork;
export declare const MAINNET_CLIO_NODES: string[];
export declare const MAINNET_NODES: string[];
export declare const TESTNET_NODES: string[];
export declare const DEVNET_NODES: string[];
export declare const XAHAU_MAINNET_NODES: string[];
export declare const XAHAU_TESTNET_NODES: string[];
export declare const FAUCET_XAHAU_TESTNET = "https://xahau-test.net/accounts";
export interface NetworkNode {
    chain: Chain;
    name: Network;
    customNetworkName?: string;
    server: string;
    nodes?: string[];
    description: string;
    networkID?: number;
}
interface NetworkConfigXRPL {
    [XRPLNetwork.MAINNET]: NetworkNode;
    [XRPLNetwork.TESTNET]: NetworkNode;
    [XRPLNetwork.DEVNET]: NetworkNode;
    [XRPLNetwork.CUSTOM]: NetworkNode;
}
interface NetworkConfigXahau {
    [XahauNetwork.XAHAU_MAINNET]: NetworkNode;
    [XahauNetwork.XAHAU_TESTNET]: NetworkNode;
    [XahauNetwork.CUSTOM]: NetworkNode;
}
type ChainConfig = {
    [Chain.XRPL]: NetworkConfigXRPL;
    [Chain.XAHAU]: NetworkConfigXahau;
};
export declare const NETWORK: ChainConfig;
export declare const getDefaultNetwork: (chain: Chain) => Network;
export declare function getNetwork(chain: Chain, network: Network): NetworkNode;
export declare const getNetworkByNetworkID: (networkID: number) => NetworkNode;
export {};
